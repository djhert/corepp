CMAKE_MINIMUM_REQUIRED(VERSION 3.15)
GET_FILENAME_COMPONENT(TOOLNAME ${CMAKE_CURRENT_SOURCE_DIR} NAME)
STRING(REPLACE " " "_" TOOLNAME ${TOOLNAME})
PROJECT(${TOOLNAME} LANGUAGES CXX)
SET(CMAKE_CXX_STANDARD 17)

IF(NOT CMAKE_BUILD_TYPE)
    SET(CMAKE_BUILD_TYPE Debug)
ENDIF()

# Set output directory
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${OUTPATH}")
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG "${OUTPATH}")
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE "${OUTPATH}")
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${OUTPATH}")
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG "${OUTPATH}")
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE "${OUTPATH}")
SET(CMAKE_PDB_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}")

FILE(GLOB_RECURSE LIBSOURCES ${PROJECT_SOURCE_DIR}/*.c**)

IF(CORE_BUILD_TYPE MATCHES Single)
    ADD_EXECUTABLE(${TOOLNAME} ${LIBSOURCES})    
ELSE()
    ADD_LIBRARY(${TOOLNAME} STATIC ${LIBSOURCES})
    TARGET_LINK_LIBRARIES(${PROJECTNAME} -Wl,--whole-archive ${TOOLNAME} -Wl,--no-whole-archive)
    ADD_DEPENDENCIES(${PROJECTNAME} ${TOOLNAME})
ENDIF()

TARGET_INCLUDE_DIRECTORIES(${TOOLNAME}
  PUBLIC
  ${INCLUDE_DIR}
)

# Set compile flags
SET_PROPERTY(TARGET ${TOOLNAME} APPEND_STRING PROPERTY COMPILE_FLAGS ${C_FLAGS})
SET_PROPERTY(TARGET ${TOOLNAME} APPEND_STRING PROPERTY LINK_FLAGS ${L_FLAGS})
TARGET_COMPILE_FEATURES(${TOOLNAME} PUBLIC cxx_std_17)