CMAKE_MINIMUM_REQUIRED(VERSION 3.15)
GET_FILENAME_COMPONENT(PROJECTNAME ${CMAKE_CURRENT_SOURCE_DIR} NAME)
STRING(REPLACE " " "_" PROJECTNAME ${PROJECTNAME})
PROJECT(${PROJECTNAME} LANGUAGES CXX)
SET(CMAKE_CXX_STANDARD 17)

# default to debug build
IF(NOT CMAKE_BUILD_TYPE)
    SET(CMAKE_BUILD_TYPE Debug)
ENDIF()

# Set output directory
SET(OUTPATH "${PROJECT_BINARY_DIR}/bin")
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${OUTPATH}")
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG "${OUTPATH}")
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE "${OUTPATH}")
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${OUTPATH}")
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG "${OUTPATH}")
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE "${OUTPATH}")
SET(CMAKE_PDB_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}")

# Variables used later in branches
SET(C_FLAGS )
SET(L_FLAGS )

SET(INCLUDE_DIR ${PROJECT_SOURCE_DIR}/include)

IF("${CMAKE_BUILD_TYPE}" MATCHES Release)
    SET(C_FLAGS "${C_FLAGS} -O3 -DNDEBUG")
ELSE()
    SET(C_FLAGS "${C_FLAGS} -g -D_DEBUG -Wall")
ENDIF()

IF(CORE_BUILD_TYPE MATCHES Single)
    SET(C_FLAGS "${C_FLAGS} -DSINGLE_CALL")
ELSE()
    SET(C_FLAGS "${C_FLAGS} -DMULTI_CALL")
    FILE(GLOB_RECURSE SOURCES ${PROJECT_SOURCE_DIR}/src/cmd/*.c**)
    ADD_EXECUTABLE(${PROJECTNAME} ${SOURCES})
    TARGET_COMPILE_FEATURES(${PROJECTNAME} PUBLIC cxx_std_17)

    TARGET_INCLUDE_DIRECTORIES(${PROJECTNAME}
        PUBLIC
        ${INCLUDE_DIR}
    )

    # Set compile flags
    SET_PROPERTY(TARGET ${PROJECTNAME} APPEND_STRING PROPERTY COMPILE_FLAGS ${C_FLAGS})
    SET_PROPERTY(TARGET ${PROJECTNAME} APPEND_STRING PROPERTY LINK_FLAGS ${L_FLAGS})
ENDIF()


## Macro to search subdirectories and return list
MACRO(SUBDIRS result curdir)
  FILE(GLOB children RELATIVE ${curdir} ${curdir}/*)
  SET(dirlist "")
  FOREACH(child ${children})
    IF(IS_DIRECTORY ${curdir}/${child})
      LIST(APPEND dirlist ${child})
    ENDIF()
  ENDFOREACH()
  SET(${result} ${dirlist})
ENDMACRO()

SUBDIRS(subdirs ${PROJECT_SOURCE_DIR}/src)
FOREACH(subdir ${subdirs})
  SET(binarydir ${PROJECT_BINARY_DIR}/${subdir})
  SET(fullsubdir ${PROJECT_SOURCE_DIR}/src/${subdir})
  IF(NOT ${subdir} MATCHES "cmd")
    ADD_SUBDIRECTORY(${fullsubdir} ${binarydir})
    MESSAGE(STATUS "Module: " ${subdir})
  ENDIF()
ENDFOREACH()